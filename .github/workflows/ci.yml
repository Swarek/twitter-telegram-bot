name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: twitter_telegram_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-cov flake8

    - name: Create .env file
      run: |
        cp .env.example .env
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/twitter_telegram_test" >> .env
        echo "REDIS_URL=redis://localhost:6379" >> .env

    - name: Run linter
      run: |
        # Arrêter à la première erreur de syntaxe
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Avertissements de complexité (optionnel)
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run tests
      run: |
        # Pour l'instant, juste vérifier que le code s'importe correctement
        python -c "import sys; sys.path.insert(0, 'src'); import config"
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/twitter_telegram_test
        REDIS_URL: redis://localhost:6379

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image (test only)
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        tags: twitter-telegram-bot:test
        cache-from: type=gha
        cache-to: type=gha,mode=max